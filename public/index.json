[   
    
    
    {
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-10/oct-22/",
                    "title": "Oct 22",
                    "categories": [],
                    "content":"[Oct 22 [!tldr] Oct 22 Save some of your precious time and visit my GitHub project This post is a little reminder to myself. Although it is possible to migrate existing Hugo websites from Firebase, it requires a lot of work to do so. But to convert one into an Obsidian vault is another level. If you visited this website to find an answer to how to achieve by yourselves, I recommend taking a look at my GitHub project existing here: https://github.com/Sparky4567/obsidian. It will save some time. Inner Tags: #new_post #never #again #unless #someone #pays #for #it Internal links if exist: External links if exist: https://github.com/Sparky4567/obsidian Markdown external:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-10/oct-17/",
                    "title": "Oct 17",
                    "categories": [],
                    "content":"[Oct 17 [!tldr] Oct 17 You were searching for a way to use Grammarly in your notes. Here it is. Boy, oh boy. The majority of this site visitors come here to check if there is even the slightest possibility to use the Grammarly plugin in Obsidian Notes. The short answer is no. There is no possibility to use the plugin. On the other hand, due to raised traffic, I had to find another way to use Grammarly without any external apps. Somehow and somewhy I decided to visit Grammarly&rsquo;s developer page and to my surprise, I found some useful information on implementing the grammar checking feature. A little bit of REACT, a few minutes of templating, some Javascript magic and&hellip; If you want to use Grammarly in your notes, you can add a special template into your note. All you need is just an internet connection to be able to use the template. So the idea is quite simple actually. I made a separate WEB page and implemented the Grammarly SDK. Furthermore, I did not include any unnecessary security restrictions so that the page could be shared as an IFRAME. Therefore, you can implement it into your pages as a template using a shortcode. &lt;iframe src=&quot;https://grammarplugin.artefaktas.eu/&quot; width=&quot;100%&quot; height=&quot;600&quot;&gt;&lt;/iframe&gt; You can support my little project by clicking the &ldquo;Support me&rdquo; option within the IFRAME. Inner Tags: #new_post #grammarly #october Internal links if exist: External links if exist: Markdown external:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-09/sep-15/",
                    "title": "Sep 15",
                    "categories": [],
                    "content":"[Sep 15 [!tldr] Sep 15 A new ReactJS project Hello, blog readers. I want to share with you one of my recent projects. It is a basic image watermarking tool built purely with the ReactJS framework and some extra libraries to manipulate your chosen illustrations. Short instructions on how to use the tool Follow the link https://watermark.artefaktas.eu/, upload an image, change the default watermark text, adjust the font size and press &ldquo;Watermark It&rdquo;. Finally, press the download button to store a modified image on your computer. P.s. Some additional functions are still buggy. You can add a few extra effects if you want to. Although, each of them should be applied separately by choosing the filter, using the slider to regulate the strength of an effect and clicking &ldquo;Apply filter&rdquo;. By the way, you can install the app as a PWA application on your favourite devices. Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-09/sep-12/",
                    "title": "Sep 12",
                    "categories": [],
                    "content":"[Sep 12 [!tldr] Sep 12 Testing automation once again This is a test post No. 2 A piece of code is visible for some strange reason. Therefore, I wrote some more text to test this out. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mattis quam vitae ligula luctus, eget convallis urna rhoncus. Vestibulum imperdiet dictum massa eu varius. Morbi est urna, suscipit a pellentesque sed, malesuada ut magna. Ut porta ipsum in convallis mattis. Vivamus et dolor tincidunt lorem sagittis auctor sit amet sit amet sem. Vestibulum vitae sem sed leo ornare suscipit in sed nunc. Curabitur malesuada, enim at tristique luctus, justo ipsum pellentesque massa, a tristique lacus lectus quis purus. In ut dui ornare, tincidunt turpis quis, mollis enim. Cras quis finibus velit, sit amet elementum diam. Vestibulum vel nulla arcu. Nullam vestibulum mauris arcu, id malesuada felis luctus rutrum. Curabitur pharetra tincidunt luctus. Etiam lacus justo, malesuada ut pretium a, porta sit amet ligula. Pellentesque pharetra est ac semper porta. Duis efficitur metus nulla, at molestie tellus dapibus gravida. Ut mollis arcu vitae eros dictum, in pharetra augue tincidunt. Pellentesque convallis magna et erat vehicula venenatis. Sed varius justo ac arcu accumsan commodo. Cras blandit tempor dui vitae rhoncus. Proin non interdum felis, ac maximus nunc. Etiam efficitur sem eget malesuada sagittis. Phasellus nec luctus quam. Donec vehicula ac ante id scelerisque. Nullam massa eros, iaculis id ornare at, lobortis eget ipsum. Pellentesque facilisis enim sed risus efficitur, eu iaculis ex aliquam. In ante risus, rhoncus in tellus eu, dignissim consectetur ex. Mauris condimentum metus vitae imperdiet vehicula. Etiam commodo est massa, sed aliquam tortor interdum a. Sed ut dolor eu leo malesuada faucibus a a tellus. Proin quis est volutpat, convallis diam non, blandit dui. Vivamus aliquam vitae lacus eget pulvinar. Sed a condimentum odio, at semper mi. Etiam ultrices arcu cursus venenatis semper. Nulla volutpat magna et pharetra vestibulum. Sed a tincidunt arcu. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In eu pretium mauris, eget fringilla elit. Nunc varius mauris magna, id dapibus elit vehicula in. Nam ac consectetur erat. Morbi ut lobortis nulla. Sed varius nec velit eu ultricies. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vivamus dapibus condimentum magna ac sagittis. Vivamus ultricies fermentum magna ac tincidunt. Duis purus dui, vestibulum eu egestas ac, sagittis eget sem. Mauris dolor magna, commodo vitae aliquet vitae, elementum vestibulum metus. Phasellus rhoncus augue orci, cursus blandit mi ornare sed. Vivamus eget leo at massa mattis accumsan nec quis massa. Cras ut pretium purus. Nulla luctus elit augue. Aliquam nibh lorem, vestibulum id lacus ac, lobortis egestas odio. Donec laoreet nunc vel est volutpat, id accumsan lectus ornare. In vel erat volutpat, condimentum tellus ut, mollis nisl. Curabitur egestas ullamcorper turpis, sed venenatis ex sollicitudin id. window.addEventListener("load",()={ let videoId = "https://www.tiktok.com/@yasinald8/video/7142167454381395206"; let className = "7142167454381395206" let fetchUrl = "https://www.tiktok.com/oembed?url="+videoId; let classSelector = String(className); fetch(fetchUrl).then((r)=r.json()).then((d)={ document.getElementsByClassName(classSelector)[0].innerHTML = d.html; let sc = document.createElement("script"); sc.src = "https://www.tiktok.com/embed.js"; document.body.appendChild(sc); }).catch((err)={ console.log(err); }); }); Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-09/sep-11/",
                    "title": "Sep 11",
                    "categories": [],
                    "content":"[Sep 11 [!tldr] Sep 11 This is a test post. Testing a bat script execution. Test post. window.addEventListener("load",()={ let videoId = "https://www.tiktok.com/@happycat202/video/7141787468558290182"; let className = "7141787468558290182" let fetchUrl = "https://www.tiktok.com/oembed?url="+videoId; let classSelector = String(className); fetch(fetchUrl).then((r)=r.json()).then((d)={ document.getElementsByClassName(classSelector)[0].innerHTML = d.html; let sc = document.createElement("script"); sc.src = "https://www.tiktok.com/embed.js"; document.body.appendChild(sc); }).catch((err)={ console.log(err); }); }); Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-09/sep-09/",
                    "title": "Sep 09",
                    "categories": [],
                    "content":"[Sep 09 [!tldr] Aug 09 Short notice Woosh. I skipped a lot of time on this one due to technical issues. I will try to automate this blog as much as I can. (A-ha! Visual Studio Code online editor is the solution. There is no need to automate this blog anymore.) Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-07/jul-19/",
                    "title": "Jul 19",
                    "categories": [],
                    "content":"[Jul 19 [!quote] Jul 19 Feynman&rsquo;s technique Nothing too much interesting happened today. Just as usual. It is worth mentioning that I managed to stumble on one good technique called &ldquo;Feynman&rsquo;s technique&rdquo;. Its purpose - memorize and recall the information a bit faster. I think that I already use it, but I will try to dig into this deeper. There are still some unknown variables. Well, at least for me. Internal links if exist: External links if exist: Just use google this time]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-07/jul-18/",
                    "title": "Jul 18",
                    "categories": [],
                    "content":"[Jul 18 [!tldr] Jul 18 Oh, Grammarly&hellip; What to do if English is not your native language? Well, you start to use the Grammarly plugin, of course. And you love it. And you hate it. And you adore it. And you despise it. It is probably the one tool that can assist you in improving your writing skill. Boy, oh boy. It is one tool that gives you hell, also. Correctness score? Clarity? Engagement? Delivery and overall score? For my dogs' sake, Grammarly! Am I trying to pass an exam here? All jokes aside, I should mention that it is one of the best tools online. Like really. The top-notch. It works as a browser plugin, an app and a desktop application. It is worth mentioning that a desktop version works on Windows only. So, if you use a Linux distro, you already know what to do. Install it as a browser plugin! Log in, go to &ldquo;My Grammarly&rdquo;, and start typing your post. Come one, give it a test drive. Right now. Now. Or maybe now! Improve your writing. Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-07/jul-17/",
                    "title": "Jul 17",
                    "categories": [],
                    "content":"[Jul 17 [!tldr] Jul 17 Did not read again? This is a shor post about how I use the information I find to create some of my blog posts. Some of you might be interested in the information I use in writing my newest blog posts. I can tell you one thing. I use multiple sources from different places all around the internet and even some of my old notebooks. Almost every time I need to write something about the code or tools I use, I read lots of documentation and test a few things before writing. I want to make correct assumptions based on my personal experience, so that is why I investigate a bunch of functionalities myself. That is helpful when you want to write some lengthy technical texts, but what about something else? Would it be possible to use any of the TikTok videos as a base material for a start? Well, of course, it would. Though, you would need to view the material as sceptically as possible. Not everything you find on the internet is the truth. You may need to make the conclusions yourselves. So my recipe is: Watch the video. Identify which parts of it are accurate and which are not. Recheck the information. Read some documentation or research papers if it is possible. Is there a chance that you could test the theory? Test it! Write down your conclusions. Write your post and publish it. Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-07/jul-16/",
                    "title": "Jul 16",
                    "categories": [],
                    "content":"[Jul 16 [!tldr] Jul 16 Just another post. This one is about the best blogging system around. To sum up, it does not exist. Is there a perfect content management system for blogging? I still doubt it. You see, I tried almost every possible tool that I could find all over the internet. Joomla, WordPress, Jekyll, Hugo, Blogger - you name it. I even constructed a blogging tool myself a long time ago to prove that it is possible to usae almost any web tool you like to create a website you will enjoy using. Well, as long as it is formatted in a suitable manner according to WEB guidelines. A few important key points are only valid HTML structure, well-formatted RSS feed, easy-to-use graphical user interface, safety and appealing looks to your visitors. How do you differ a good CMS from a bad one? How should you choose the one you trully need? I think you need some more information to decide. Let us talk about Flat File Content Management Systems What is a &ldquo;Flat File CMS&rdquo;? What is a website generator? Could you tell me? I am sure that I can provide you with some information about those thingies. Flat File CMS How does a system like that even works? Hm, that is not as complicated, as you might think. First things first, a flat file content management system is able to store and edit files. The main important thing is that such a system does not use a database atll. It stores data in the files and use them to generate webpages. Second, most of the Flat file Systems have an admin panel to manage all of the recordings. A perfect example of a FFCMS could be Grav: https://getgrav.org/ Advantages: Fast building times Admin panel Multiple users support Website generators Website generators are sets of specific tools dedicated to generate websites. Simple as that. Website generators can use almost any text files, such as JSON, markdown, html, text or even something else. One of the drawbacks of using such systems could be a lack of editing tools. On the other hand, there are plenty of text editing tools you could find online or on your computer: Typora Gedit Kchem&hellip; Notepad Obsidian Sublime Text Visual Studio Code Almost any code or text editor should do the job. The main difference between WG and FFCMS is that in order to publish your work, you will have to write some basic commands into the command line. Example: Let us use some imagination. Here are two steps after you finish writing your breathtaking blog post: hugo (Builds/Rebuilds your project) firebase deploy (Puts the files of public directory into a firebase) Some website generator examples: Hugo (https://gohugo.io/) Jekyll (https://jekyllrb.com/) Gatsby (https://www.gatsbyjs.com/) Advantages: Fast building times ! The freedom to create templates by yourselves Drawbacks: Almost everytime you need to include an extra functionality into your pages you will have to &ldquo;google around&rdquo; the solutions yourselves Building configuration&hellip; You will have to put your hands into the dirt sooner or later Lack of editing tools Blogger, Wordpress, Joomla and other similar products So, could you tell me how these ones differ from FFCMS or a simple website generator? In case you could not, I can assure you that it is particulary easy to grasp the basic concepts. Each one of the mentioned CMS use SQL databases to store the information. They use a special programmed steps to get this information on command (press of a button) and build the pages. Advantages: The functionality can be improved by installing various plugins Multiple user support Drawbacks: They tend to be a bit slow sometimes depending on your service provider and use-case scenarios They tend to have some bugggggggs and security holes Despite all of those things I mentioned above, the overall approach to create a stylish website depends totally on the user and the knowledge of tools. You can make a perfect website with almost every content management system or generator. I admit that the most straightforward solution for a novice could be Wordpress or Blogger. In some cases, when a person has a bit more understanding how to operate computer systems, there is nothing that could not be done with a generator and some extra effort. If I could give you an advice, here it is. If you are a novice user, just choose the best option based on your personal knowledge and watch a few youtube videos to make the final decision. Personally, I do not think that there is a perfect tool around to solve all of your WEB issues. Web standards change frequently, so you might need to modify a couple of things here and there later. Choose wisely. Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/journal/2022-07/jul-15/",
                    "title": "Jul 15",
                    "categories": [],
                    "content":"[Jul 15 [!tldr] Jul 15 There is nothing to read yet. This is a test post. Testing my new toolkit I guess I made something fascinating today. I mixed a couple of well-known technologies and here we are. Everytime I run a shell command to sync latest posts, with the help of Hugo, Github and Cloudflare pages, new posts appear online with almost no effort. [!hint] Hint #!/bin/bash CURRENTDATE=`date +&quot;%Y-%m-%d %T&quot;` hugo git add * -f message=&quot;Obsidian update: &quot;$CURRENTDATE git commit -m &quot;$message&quot; git push Final solution If you want to replicate this Create a file called remote.sh Insert this code inside #!/bin/bash CURRENTDATE=`date +&#34;%Y-%m-%d %T&#34;` git add content -f git add public -f message=&#34;Obsidian update: &#34;$CURRENTDATE git commit -m &#34;$message&#34; git push Create a good-named alias in your ~/.bashrc file For example: alias obsidianbuild=&#34;cd /home/yourusername/Desktop/vaults/interconnection/ &amp;&amp; hugo &amp;&amp; ./remote.sh&#34; Source your ~/.bashrc source ~/.bashrc Open your terminal And run a command obsidianbuild Internal links if exist: External links if exist:]"
                }
                ,{
                    "href": "https://obsidiannotes.artefaktas.eu/posts/kanban/kanban-board/",
                    "title": "Kanban Board",
                    "categories": [],
                    "content":"[Preparing Make more templates Doing Add more posts Done Test rebuilds ! Archive Complete %% kanban:settings {&quot;kanban-plugin&quot;:&quot;basic&quot;} %%]"
                }]